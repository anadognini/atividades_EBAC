# -*- coding: utf-8 -*-
"""metodo_aggregate.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tklek41HH6BNogZflu0dJBPXeB_L3-iJ
"""

import numpy as np
import pandas as pd

sinasc = pd.read_csv('SINASC_RO_2019.csv')
sinasc.head()

sinasc.columns

sinasc_1 = sinasc[['ESCMAE', 'IDADEMAE']]
sinasc_1.head()

sinasc_2 = sinasc[['ESCMAE', 'IDADEMAE', 'IDADEPAI']]
sinasc_2.head()

sinasc_2.groupby('ESCMAE').max()

sinasc_2.groupby('ESCMAE').aggregate('max')

sinasc_2.groupby('ESCMAE').agg('max')

"""### Agregações"""

# Alguns dos métodos que podem ser usados com aggregate():
# count()
# sum()
# mean()
# median()
# std()
# var()
# min()
# max()
# prod()
# first()
# last()

# Podemos passar uma lista, dicionário ou uma tupla com mais de uma função para
# o aggregate e todas as funções serão aplicadas a cada coluna

sinasc_2.groupby('ESCMAE').aggregate(['min', 'median', 'max'])

sinasc_2.groupby('ESCMAE').aggregate({'min', 'median', 'max'})

# Determinando exatamente qual função queremos passar para cada coluna
# especificamente

sinasc_2.groupby('ESCMAE').aggregate({'IDADEMAE': 'min', 'IDADEPAI': 'max'})

# Ou, por exemplo, podemos passar uma lista com duas funções para uma coluna
# e para outra apenas uma função. Podemos variar conforme desejamos

sinasc_2.groupby('ESCMAE').aggregate({'IDADEMAE': ['min', 'max'], 'IDADEPAI': 'sum'})

# É possível passar uma função própria (criada por nós) para o aggregate()

def amplitude(array):
  return array.max() - array.min()

amplitude(sinasc_2['IDADEMAE'])

sinasc_2.groupby(['ESCMAE']).agg(amplitude)

# Aplicando aggregate a uma variável

agrupamento = sinasc_2.groupby(['ESCMAE'])
agrupamento.agg(['mean', 'std', amplitude])

# Renomeando as colunas

agrupamento = sinasc_2.groupby(['ESCMAE'])
agrupamento.agg([('média', 'mean'), ('desvio padrão', 'std'), ('amplitude', amplitude)])



# sinasc_2.groupby('ESCMAE').aggregate({'IDADEMAE': ['min', 'max'], 'IDADEPAI': 'sum'})

# Renomeando as colunas para facilitar a compreensão do código acima

agrupamento.agg({
    'IDADEMAE': [('mínimo', 'min'), ('máximo', 'max')],
    'IDADEPAI': [('soma', 'sum')]
})

