# -*- coding: utf-8 -*-
"""m09_tarefa_02.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zKPuLMfgnSvrP14f0mfJmAp9mFHQPcVJ
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# %matplotlib inline

sinasc = pd.read_csv('SINASC_RO_2019.csv')
sinasc.head()

int64_cols = sinasc.select_dtypes(include=['int64']).columns
float64_cols = sinasc.select_dtypes(include=['float64']).columns

int64_cols, float64_cols

"""# Tarefa 2

### 1. Crie 2 faixas de Latitude do município (munResLat) sendo uma acima e outra abaixo de -10.5 e aplique o groupby usando essas faixas como chave e realize operações de soma, media, minimo, maximo, mediana, desvio padrao, variancia pra pelo menos 2 variáveis numéricas ainda não utilizadas
"""

sinasc['munResLat']

sinasc['Latitude'] = pd.cut(sinasc['munResLat'], [-90, -10.5, 0])
sinasc['Latitude']

# Variáveis escolhidas foram IDADEMAE e PESO.

resultado_latitude = sinasc.groupby('Latitude').agg({
    'IDADEMAE': [('soma', 'sum'), ('média', 'mean'), ('mínimo', 'min'), ('máximo', 'max'), ('mediana', 'median'), ('desvio padrão', 'std'), ('variância', 'var')],
    'PESO': [('soma', 'sum'), ('média', 'mean'), ('mínimo', 'min'), ('máximo', 'max'), ('mediana', 'median'), ('desvio padrão', 'std'), ('variância', 'var')]
})

resultado_latitude

"""### 2. Crie 2 faixas da área dos municípios (munResArea) sendo uma acima e outra abaixo de 3000 e aplique o groupby usando essas faixas como chave e realize operações de soma, media, minimo, maximo, mediana, desvio padrao, variancia pra pelo menos 2 variáveis numéricas ainda não utilizadas

"""

area_minima = sinasc['munResArea'].min()
area_maxima = sinasc['munResArea'].max()

sinasc['Area'] = pd.cut(sinasc['munResArea'], [area_minima, 3000, area_maxima])
sinasc['Area']

resultado_area = sinasc.groupby('Area').agg({
    'IDADEPAI': [('soma', 'sum'), ('média', 'mean'), ('mínimo', 'min'), ('máximo', 'max'), ('mediana', 'median'), ('desvio padrão', 'std'), ('variância', 'var')],
    'APGAR1': [('soma', 'sum'), ('média', 'mean'), ('mínimo', 'min'), ('máximo', 'max'), ('mediana', 'median'), ('desvio padrão', 'std'), ('variância', 'var')]
})

resultado_area

"""### 3. Determine faixas na variável munResAlt e aplique o groupby usando essas faixas como chave e realize operações de soma, media, minimo, maximo, mediana, desvio padrao, variancia pra pelo menos 2 variáveis numéricas ainda não utilizadas"""

altitude_min = sinasc['munResAlt'].min()
altitude_max = sinasc['munResAlt'].max()
altitude_media = sinasc['munResAlt'].mean()

sinasc['Altitude'] = pd.cut(sinasc['munResAlt'], [altitude_min, altitude_media, altitude_max])
sinasc['Altitude']

resultado_altitude = sinasc.groupby('Altitude').agg({
    'QTDFILVIVO': [('soma', 'sum'), ('média', 'mean'), ('mínimo', 'min'), ('máximo', 'max'), ('mediana', 'median'), ('desvio padrão', 'std'), ('variância', 'var')],
    'APGAR5': [('soma', 'sum'), ('média', 'mean'), ('mínimo', 'min'), ('máximo', 'max'), ('mediana', 'median'), ('desvio padrão', 'std'), ('variância', 'var')]
})

resultado_altitude

"""### 4. Plote no mesmo grafico ao longo do tempo a idade media das mulheres de cada regiao imediatas de rondonia

"""

imediatas = {
    "Candeias do Jamari": "Porto Velho",
    "Guajará-Mirim": "Porto Velho",
    "Itapuã do Oeste": "Porto Velho",
    "Nova Mamoré": "Porto Velho",
    "Porto Velho": "Porto Velho",
    "Ariquemes": "Ariquemes",
    "Alto Paraíso": "Ariquemes",
    "Buritis": "Ariquemes",
    "Cacaulândia": "Ariquemes",
    "Campo Novo de Rondônia": "Ariquemes",
    "Cujubim": "Ariquemes",
    "Monte Negro": "Ariquemes",
    "Rio Crespo": "Ariquemes",
    "Jaru": "Jaru",
    "Governador Jorge Teixeira": "Jaru",
    "Machadinho D'Oeste": "Jaru",
    "Theobroma": "Jaru",
    "Vale do Anari": "Jaru",
    "Alvorada D'Oeste": "Ji-Paraná",
    "Costa Marques": "Ji-Paraná",
    "Ji-Paraná": "Ji-Paraná",
    "Mirante da Serra": "Ji-Paraná",
    "Nova União": "Ji-Paraná",
    "Ouro Preto do Oeste": "Ji-Paraná",
    "Presidente Médici": "Ji-Paraná",
    "São Francisco do Guaporé": "Ji-Paraná",
    "São Miguel do Guaporé": "Ji-Paraná",
    "Seringueiras": "Ji-Paraná",
    "Teixeirópolis": "Ji-Paraná",
    "Urupá": "Ji-Paraná",
    "Vale do Paraíso": "Ji-Paraná",
    "Cacoal": "Cacoal",
    "Alta Floresta D'Oeste": "Cacoal",
    "Alto Alegre dos Parecis": "Cacoal",
    "Castanheiras": "Cacoal",
    "Espigão D'Oeste": "Cacoal",
    "Ministro Andreazza": "Cacoal",
    "Nova Brasilândia D'Oeste": "Cacoal",
    "Novo Horizonte do Oeste": "Cacoal",
    "Parecis": "Cacoal",
    "Pimenta Bueno": "Cacoal",
    "Primavera de Rondônia": "Cacoal",
    "Rolim de Moura": "Cacoal",
    "Santa Luzia D'Oeste": "Cacoal",
    "São Felipe D'Oeste": "Cacoal",
    "Vilhena": "Vilhena",
    "Cabixi": "Vilhena",
    "Cerejeiras": "Vilhena",
    "Chupinguaia": "Vilhena",
    "Colorado do Oeste": "Vilhena",
    "Corumbiara": "Vilhena",
    "Pimenteiras do Oeste": "Vilhena"
}

sinasc['Região Imediata'] = sinasc['munResNome'].map(imediatas)
sinasc['Região Imediata']

sinasc['DTNASC'] = pd.to_datetime(sinasc['DTNASC'])
sinasc['Ano e Mês'] = sinasc['DTNASC'].dt.to_period('M')

idade_media_mae = sinasc.groupby(['Ano e Mês', 'Região Imediata'])['IDADEMAE'].mean().reset_index()

import matplotlib.pyplot as plt

plt.figure(figsize=(10,6))

for regiao in idade_media_mae['Região Imediata'].unique():
    dados = idade_media_mae[idade_media_mae['Região Imediata'] == regiao]
    plt.plot(dados['Ano e Mês'].astype(str), dados['IDADEMAE'], label=regiao)

plt.title('Idade média das mães por região imediata de Rondônia')
plt.xlabel('Ano e Mês')
plt.ylabel('Idade média')
plt.legend()
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

"""### 5. Utilize a tabela do link abaixo e crie faixas utilizando o mapping e gere agrupamentos utilizando essas faixas como chave

### 5.1 IDH
A - https://pt.wikipedia.org/wiki/Lista_de_munic%C3%ADpios_de_Rond%C3%B4nia_por_IDH-M
"""

idh_ro = {
    "Porto Velho": 0.736,
    "Vilhena": 0.731,
    "Cacoal": 0.718,
    "Ji-Paraná": 0.714,
    "Pimenta Bueno": 0.710,
    "Ariquemes": 0.702,
    "Rolim de Moura": 0.700,
    "Cerejeiras": 0.692,
    "Jaru": 0.689,
    "Colorado do Oeste": 0.685,
    "Ouro Preto do Oeste": 0.682,
    "Espigão D'Oeste": 0.672,
    "Santa Luzia d'Oeste": 0.670,
    "Pimenteiras do Oeste": 0.665,
    "Presidente Médici": 0.664,
    "Castanheiras": 0.658,
    "Guajará-Mirim": 0.657,
    "Chupinguaia": 0.652,
    "Cabixi": 0.650,
    "Candeias do Jamari": 0.649,
    "São Felipe d'Oeste": 0.649,
    "Cacaulândia": 0.646,
    "São Miguel do Guaporé": 0.646,
    "Mirante da Serra": 0.643,
    "Alvorada d'Oeste": 0.643,
    "Teixeirópolis": 0.643,
    "Nova Brasilândia d'Oeste": 0.643,
    "Rio Crespo": 0.643,
    "Primavera de Rondônia": 0.641,
    "Alta Floresta d'Oeste": 0.641,
    "Ministro Andreazza": 0.638,
    "Novo Horizonte do Oeste": 0.634,
    "Vale do Paraíso": 0.627,
    "Alto Paraíso": 0.625,
    "Parecis": 0.617,
    "Buritis": 0.616,
    "Itapuã do Oeste": 0.614,
    "Corumbiara": 0.613,
    "Cujubim": 0.612,
    "Costa Marques": 0.611,
    "São Francisco do Guaporé": 0.611,
    "Urupá": 0.609,
    "Monte Negro": 0.607,
    "Seringueiras": 0.598,
    "Governador Jorge Teixeira": 0.596,
    "Machadinho d'Oeste": 0.596,
    "Campo Novo de Rondônia": 0.593,
    "Alto Alegre dos Parecis": 0.592,
    "Theobroma": 0.589,
    "Nova União": 0.587,
    "Nova Mamoré": 0.587,
    "Vale do Anari": 0.584
}

sinasc['IDH Municipio'] = sinasc['munResNome'].map(idh_ro)
sinasc['IDH Municipio'].isna().sum()

sinasc["Faixa IDH"]= pd.cut(sinasc['IDH Municipio'], bins=[0, 0.600, 0.700, 1.0],
                    labels=['Baixo', 'Médio', 'Alto'])

sinasc.groupby('Faixa IDH').agg({
        'PESO': ['sum', 'mean', 'min', 'max', 'median', 'std', 'var'],
        'IDADEMAE': ['mean', 'min', 'max', 'std', 'median'],
        'IDADEPAI': ['mean', 'min', 'max', 'std', 'median']
    })

"""### 5.2 IFDM
B - https://pt.wikipedia.org/wiki/Lista_de_munic%C3%ADpios_de_Rond%C3%B4nia_por_IFDM

"""

ifdm_ro = {
    "Ariquemes": 0.7746,
    "Vilhena": 0.7465,
    "Pimenta Bueno": 0.7383,
    "Porto Velho": 0.7257,
    "Ji-Paraná": 0.7117,
    "Cacoal": 0.7111,
    "Santa Luzia d'Oeste": 0.6850,
    "Rolim de Moura": 0.6785,
    "Chupinguaia": 0.6766,
    "São Miguel do Guaporé": 0.6699,
    "Pimenteiras do Oeste": 0.6501,
    "Teixeirópolis": 0.6500,
    "Colorado do Oeste": 0.6473,
    "Jaru": 0.6450,
    "Rio Crespo": 0.6430,
    "Primavera de Rondônia": 0.6384,
    "Alta Floresta d'Oeste": 0.6337,
    "Ouro Preto do Oeste": 0.6261,
    "São Francisco do Guaporé": 0.6214,
    "Candeias do Jamari": 0.6199,
    "Buritis": 0.6199,
    "São Felipe d'Oeste": 0.6153,
    "Presidente Médici": 0.6140,
    "Cerejeiras": 0.6137,
    "Monte Negro": 0.6016,
    "Urupá": 0.6006,
    "Espigão d'Oeste": 0.5973,
    "Seringueiras": 0.5922,
    "Alvorada d'Oeste": 0.5919,
    "Itapuã do Oeste": 0.5903,
    "Cabixi": 0.5887,
    "Novo Horizonte do Oeste": 0.5858,
    "Nova Brasilândia d'Oeste": 0.5857,
    "Vale do Paraíso": 0.5818,
    "Corumbiara": 0.5759,
    "Alto Paraíso": 0.5735,
    "Cacaulândia": 0.5721,
    "Vale do Anari": 0.5710,
    "Ministro Andreazza": 0.5657,
    "Costa Marques": 0.5626,
    "Nova União": 0.5571,
    "Guajará-Mirim": 0.5541,
    "Mirante da Serra": 0.5519,
    "Parecis": 0.5502,
    "Castanheiras": 0.5430,
    "Theobroma": 0.5405,
    "Machadinho d'Oeste": 0.5322,
    "Campo Novo de Rondônia": 0.5272,
    "Nova Mamoré": 0.5084,
    "Cujubim": 0.5055,
    "Alto Alegre dos Parecis": 0.5046,
    "Governador Jorge Teixeira": 0.4562
}

sinasc['IFDM Municipio'] = sinasc['munResNome'].map(ifdm_ro)
sinasc['IFDM Municipio'].isna().sum()

sinasc["Faixa IFDM"]= pd.cut(sinasc['IFDM Municipio'], bins=[0, 0.400, 0.600, 0.800, 1.0],
                    labels=['Baixo', 'Regular', 'Moderado', 'Alto'])

sinasc["Faixa_IFDM"] = pd.cut(
    sinasc['IFDM Municipio'],
    bins=[0.5, 0.6, 0.8],
    labels=['Regular', 'Moderado']
)

sinasc.groupby('Faixa_IFDM').agg({
        'PESO': ['sum', 'mean', 'min', 'max', 'median', 'std', 'var'],
        'IDADEMAE': ['mean', 'min', 'max', 'std', 'median'],
        'IDADEPAI': ['mean', 'min', 'max', 'std', 'median']
    })

"""### 5.3 PIB
C - https://pt.wikipedia.org/wiki/Lista_de_munic%C3%ADpios_de_Rond%C3%B4nia_por_PIB

"""

pib_ro = {
    "Porto Velho": 20059522,
    "Ji-Paraná": 4231113,
    "Vilhena": 4215046,
    "Ariquemes": 3209761,
    "Cacoal": 2792383,
    "Jaru": 1765089,
    "Pimenta Bueno": 1642516,
    "Rolim de Moura": 1565194,
    "Guajará-Mirim": 1054179,
    "Ouro Preto do Oeste": 985868,
    "Buritis": 966552,
    "São Miguel do Guaporé": 905335,
    "Machadinho do Oeste": 890320,
    "Espigão d'Oeste": 773381,
    "Cerejeiras": 743037,
    "Nova Mamoré": 742687,
    "Alta Floresta do Oeste": 734469,
    "Candeias do Jamari": 655606,
    "Presidente Médici": 559990,
    "Nova Brasilândia do Oeste": 548734,
    "Alto Paraíso": 510361,
    "São Francisco do Guaporé": 488043,
    "Cujubim": 487480,
    "Alto Alegre dos Parecis": 483672,
    "Chupinguaia": 468793,
    "Colorado do Oeste": 424807,
    "Corumbiara": 396728,
    "Monte Negro": 389891,
    "Campo Novo de Rondônia": 369377,
    "Alvorada do Oeste": 352628,
    "Seringueiras": 332987,
    "Costa Marques": 316671,
    "Ministro Andreazza": 297878,
    "Cacaulândia": 275338,
    "Urupá": 273501,
    "Mirante da Serra": 262640,
    "Theobroma": 257426,
    "Pimenteiras do Oeste": 246209,
    "Governador Jorge Teixeira": 239330,
    "Cabixi": 238412,
    "Novo Horizonte do Oeste": 231502,
    "Vale do Anari": 220588,
    "Santa Luzia do Oeste": 213556,
    "Itapuã do Oeste": 210031,
    "Vale do Paraíso": 185648,
    "Rio Crespo": 184430,
    "Nova União": 157321,
    "Parecis": 155434,
    "São Felipe do Oeste": 130676,
    "Teixeirópolis": 121301,
    "Primavera de Rondônia": 107030,
    "Castanheiras": 99627
}

sinasc['munResNome'] = sinasc['munResNome'].str.strip().str.lower()
pib_ro = {k.strip().lower(): v for k, v in pib_ro.items()}

sinasc['munResNome'] = sinasc['munResNome'].replace({
    "alta floresta d'oeste": "alta floresta do oeste",
    "são felipe d'oeste": "são felipe do oeste",
    "machadinho d'oeste": "machadinho do oeste",
    "santa luzia d'oeste": "santa luzia do oeste",
    "nova brasilândia d'oeste": "nova brasilândia do oeste",
    "alvorada d'oeste": "alvorada do oeste"
})

sinasc['PIB Município'] = sinasc['munResNome'].map(pib_ro)

sinasc["Faixa PIB"] = pd.cut(
    sinasc['PIB Município'],
    bins=[0, 500000, 1000000, 5000000, 21000000],
    labels=['Muito Baixo', 'Baixo', 'Médio', 'Alto']
)

sinasc.groupby('Faixa PIB').agg({
        'PESO': ['mean', 'min', 'max', 'median', 'std', 'var'],
        'IDADEMAE': ['mean', 'min', 'max', 'std', 'median'],
        'IDADEPAI': ['mean', 'min', 'max', 'std', 'median']
    })

"""### Analise as respostas encontradas, tire algum insight delas, conte pra gente algo encontrado nos dados.

Exemplo:
- Ah, descobri que a idade mediana das mulheres que deram a luz no ano de 2019 dos municipios com o PIB mais alto é a maior dentre todas.
"""

