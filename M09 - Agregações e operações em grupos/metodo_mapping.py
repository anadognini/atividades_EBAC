# -*- coding: utf-8 -*-
"""metodo_mapping.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_Fn2vQ1hRQdzD9AN9ua15-Y012JlIP9p
"""

import numpy as np
import pandas as pd

sinasc = pd.read_csv('SINASC_RO_2019.csv')
sinasc.head()

sinasc_2 = sinasc[['ESCMAE', 'IDADEMAE', 'IDADEPAI','munResNome']]
sinasc_2.head()

sinasc_2.groupby('ESCMAE').sum()

# E se a gente quisesse criar novos grupos?
# Por exemplo:
# 1 a 3 anos e 4 a 7 = 1 a 7 anos
# 8 a 11 anos e 12 anos ou mais = 8 ou mais
# Dentro do groupby, é possível fazer isso.

# Setar como índice a coluna que estamos mapeando
sinasc_3 = sinasc_2.set_index('ESCMAE')

# Realizando o mapeamento
mapping = {
    'Nenhuma': 'Nenhuma',
    '8 a 11 anos': '8 anos ou mais',
    '1 a 3 anos': '1 a 7 anos',
    '12 anos ou mais': '8 anos ou mais',
    '4 a 7 anos': '1 a 7 anos'
}

# Passando o próprio dicionário como chave para realizar o groupby
sinasc_3.groupby(mapping).sum()

sinasc.munResNome.value_counts()

# Agrupando os municípios
sinasc_2.groupby('munResNome').sum()

# Separando os municípios por regiões intermediárias do estado de Rondônia
intermediarias = {
    "Candeias do Jamari": "Porto Velho",
    "Guajará-Mirim": "Porto Velho",
    "Itapuã do Oeste": "Porto Velho",
    "Nova Mamoré": "Porto Velho",
    "Porto Velho": "Porto Velho",
    "Ariquemes": "Porto Velho",
    "Alto Paraíso": "Porto Velho",
    "Ariquemes": "Porto Velho",
    "Buritis": "Porto Velho",
    "Cacaulândia": "Porto Velho",
    "Campo Novo de Rondônia": "Porto Velho",
    "Cujubim": "Porto Velho",
    "Monte Negro": "Porto Velho",
    "Rio Crespo": "Porto Velho",
    "Jaru": "Porto Velho",
    "Governador Jorge Teixeira": "Porto Velho",
    "Machadinho D'Oeste": "Porto Velho",
    "Theobroma": "Porto Velho",
    "Vale do Anari": "Porto Velho",
    "Alvorada D'Oeste": "Ji-Paraná",
    "Costa Marques": "Ji-Paraná",
    "Ji-Paraná": "Ji-Paraná",
    "Mirante da Serra": "Ji-Paraná",
    "Nova União": "Ji-Paraná",
    "Ouro Preto do Oeste": "Ji-Paraná",
    "Presidente Médici": "Ji-Paraná",
    "São Francisco do Guaporé": "Ji-Paraná",
    "São Miguel do Guaporé": "Ji-Paraná",
    "Seringueiras": "Ji-Paraná",
    "Teixeirópolis": "Ji-Paraná",
    "Urupá": "Ji-Paraná",
    "Vale do Paraíso": "Ji-Paraná",
    "Cacoal": "Ji-Paraná",
    "Alta Floresta D'Oeste": "Ji-Paraná",
    "Alto Alegre dos Parecis": "Ji-Paraná",
    "Castanheiras": "Ji-Paraná",
    "Espigão D'Oeste": "Ji-Paraná",
    "Ministro Andreazza": "Ji-Paraná",
    "Nova Brasilândia D'Oeste": "Ji-Paraná",
    "Novo Horizonte do Oeste": "Ji-Paraná",
    "Parecis": "Ji-Paraná",
    "Pimenta Bueno": "Ji-Paraná",
    "Primavera de Rondônia": "Ji-Paraná",
    "Rolim de Moura": "Ji-Paraná",
    "Santa Luzia D'Oeste": "Ji-Paraná",
    "São Felipe D'Oeste": "Ji-Paraná",
    "Vilhena": "Ji-Paraná",
    "Cabixi": "Ji-Paraná",
    "Cerejeiras": "Ji-Paraná",
    "Chupinguaia": "Ji-Paraná",
    "Colorado do Oeste": "Ji-Paraná",
    "Corumbiara": "Ji-Paraná",
    "Pimenteiras do Oeste": "Ji-Paraná"
}

# Setando o município como índice
sinasc_2 = sinasc_2.set_index('munResNome')

# Aplicando o groupby com esse dicionário de intermediárias
sinasc_2.groupby(intermediarias).count()

sinasc_2.groupby(intermediarias, dropna=False).count()